(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

angular.module('youtubePlayer', [
    'ui.router',
    'ui.bootstrap',
    "ngSanitize",
    "com.2fdevs.videogular",
    "com.2fdevs.videogular.plugins.controls",
    "com.2fdevs.videogular.plugins.overlayplay",
    "com.2fdevs.videogular.plugins.buffering",
    "info.vietnamcode.nampnq.videogular.plugins.youtube",
    'ngAnimate',
    'toastr',
    require('./modules').name
])

},{"./modules":2}],2:[function(require,module,exports){
'use strict';

module.exports = angular.module('youtubePlayer.modules', [
    require('./public').name
]);

},{"./public":5}],3:[function(require,module,exports){


},{}],4:[function(require,module,exports){
'use strict';

function VideoController($scope, $state, Constant, HTTP, APIS, $rootScope, $sce, $timeout, toastr) {
    $rootScope.loading = true;

    var vm = this;
    vm.API = null;
    vm.videoSrc = [];
    vm.youtubeUrlRegex = /^((?:https?:)?\/\/)?((?:www|m)\.)?((?:youtube\.com|youtu.be))(\/(?:[\w\-]+\?v=|embed\/|v\/)?)([\w\-]+)(\S+)?$/;
    vm.form = {
        'url': ''
    };
    vm.key = 'AIzaSyBoyYcM5pm0rVoCcbEgO9qPqUz1Vqj_jCw';

    vm.onPlayerReady = function(API) {
        vm.API = API;
    }
    vm.config = {
        preload: "none",
        sources: [
            { src: $sce.trustAsResourceUrl("") },
        ],
        tracks: [{
            src: "pale-blue-dot.vtt",
            kind: "subtitles",
            srclang: "en",
            label: "English",
            default: ""
        }],
        theme: {
            url: "http://www.videogular.com/styles/themes/default/latest/videogular.css"
        }
    };
    vm.changeVideoSource = function(index) {
        vm.currentVideoSourceIndex = index;
        vm.API.stop();
        vm.config.sources = vm.videoSrc[index].sources;
        $timeout(vm.API.play.bind(vm.API), 100);
    }

    vm.onVideoComplete = function() {
        vm.videoSrc.splice(vm.currentVideoSourceIndex, 1);
        if (vm.videoSrc[vm.currentVideoSourceIndex + 1]) {
            return vm.changeVideoSource(vm.currentVideoSourceIndex + 1);
        } else if (vm.videoSrc[0]) {
            return vm.changeVideoSource(0);
        }
    }
    vm.init = function() {
        $rootScope.loading = true;
        HTTP.apiRequest({
            'url': APIS.fetchList,
        }).then(function(res) {
            vm.videoSrc = res.data.data.map(function(video) {
                console.log('https://www.youtube.com/watch?v=' + video.id);
                return {
                    title: video.title,
                    duration: video.duration,
                    thumbnail: video.thumbnail,
                    id: video.id,
                    sources: [{
                        src: $sce.trustAsResourceUrl('https://www.youtube.com/watch?v=' + video.id)
                    }]
                }
            });
            vm.changeVideoSource(0);
            $rootScope.loading = false;
            console.log('videoSrclength', vm.videoSrc);
        }, function(err) {
            console.log(err);
            vm.videoSrc = [];
            $rootScope.loading = false;
            toastr.info("No playlist found", "Error");
            console.log('videoSrclength', vm.videoSrc);
            if (!vm.videoSrc.length) {
                vm.API.stop();
            }
        });

    };

    vm.getDuration = function(duration) {
        var a = duration.match(/\d+/g);

        if (duration.indexOf('M') >= 0 && duration.indexOf('H') == -1 && duration.indexOf('S') == -1) {
            a = [0, a[0], 0];
        }

        if (duration.indexOf('H') >= 0 && duration.indexOf('M') == -1) {
            a = [a[0], 0, a[1]];
        }
        if (duration.indexOf('H') >= 0 && duration.indexOf('M') == -1 && duration.indexOf('S') == -1) {
            a = [a[0], 0, 0];
        }

        duration = 0;

        if (a.length == 3) {
            duration = duration + parseInt(a[0]) * 3600;
            duration = duration + parseInt(a[1]) * 60;
            duration = duration + parseInt(a[2]);
        }

        if (a.length == 2) {
            duration = duration + parseInt(a[0]) * 60;
            duration = duration + parseInt(a[1]);
        }

        if (a.length == 1) {
            duration = duration + parseInt(a[0]);
        }
        return duration;
    };
    vm.addToPlaylist = function() {
        $rootScope.loading = true;

        vm.id = vm.form.url.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/)[1];
        HTTP.apiRequest({ 'url': APIS.fetchVideoInfoById(vm.id, vm.key) })
            .then(function(res) {
                    console.log(res);
                    vm.thumbnail = res.data.items[0].snippet.thumbnails.default.url;
                    var req = {
                        'url': APIS.addUrl,
                        data: {
                            data: {
                                title: res.data.items[0].snippet.title,
                                id: vm.id,
                                duration: vm.getDuration(res.data.items[0].contentDetails.duration)
                            }
                        },
                        method: 'POST'
                    };

                    HTTP.apiRequest(req)
                        .then(function(res) {
                            $rootScope.loading = false;
                            vm.showForm = !vm.showForm
                            vm.videoSrc.push({
                                title: req.data.data.title,
                                duration: req.data.data.duration,
                                thumbnail: vm.thumbnail,
                                id: vm.id,
                                sources: [{
                                    src: $sce.trustAsResourceUrl('https://www.youtube.com/watch?v=' + vm.id)
                                }]
                            });

                            if (vm.videoSrc.length === 1) {
                                vm.changeVideoSource(0);
                            }
                            toastr.success("Playlist added successfully", "Success");
                            vm.form.url = "";

                        }, function(err) {
                            console.log(err);
                            $rootScope.loading = false;
                            toastr.error("Playlist add error", "Error");

                        });
                },
                function(err) {
                    $rootScope.loading = false;

                    console.log(err);
                    toastr.error("Something went wrong", "Error");
                });
    }
    vm.removeVideo = function(index) {
        $rootScope.loading = true;

        HTTP.apiRequest({
            'url': APIS.remove + vm.videoSrc[index].id,
            'method': 'POST'
        }).then(function(res) {
            $rootScope.loading = false;
            toastr.success("Playlist removed successfully", "Success");

            vm.init();

        }, function(err) {
            console.log(err);
            vm.init();
            $rootScope.loading = false;
            toastr.error("Something went wrong", "Error");

        });

    };
};

VideoController.$inject = ['$scope', '$state', 'Constant', 'HTTP', 'APIS', '$rootScope', '$sce', '$timeout', 'toastr'];
module.exports = VideoController;

},{}],5:[function(require,module,exports){
'use strict';

module.exports = angular.module('youtubePlayer.modules.public', ['ui.router'])
    .config(require('./router/router'))
    .constant('Constant', require('./config/constant'))
    .service('HTTP', require('./services/Http'))
    .service('APIS', require('./services/Apis'))
    .controller('VideoController', require('./controllers/VideoController'))

},{"./config/constant":3,"./controllers/VideoController":4,"./router/router":6,"./services/Apis":7,"./services/Http":8}],6:[function(require,module,exports){
'use strict';
module.exports = [
    '$stateProvider',
    '$urlRouterProvider',
    function($stateProvider, $urlRouterProvider) {
        $stateProvider
            .state('home', {
                url: '/home',
                template: require('../templates/video.html'),
                controller: 'VideoController',
                controllerAs: 'vm'
            })
        $urlRouterProvider.otherwise('/home');
    }
];

},{"../templates/video.html":9}],7:[function(require,module,exports){
'use strict';
module.exports = ['$rootScope',
    function($rootScope) {
        var baseURI = 'http://playlist-royletzchange.rhcloud.com/';
        return {
            'fetchList': baseURI + 'list',
            'addUrl': baseURI + 'add',
            'remove': baseURI + 'remove/',
            'fetchVideoInfoById': function(id, key) {
                return 'https://www.googleapis.com/youtube/v3/videos?' + 'id=' + id + '&key=' + key + '&part=snippet,contentDetails,statistics,status';
            }
        }
    }
];

},{}],8:[function(require,module,exports){
'use strict';
module.exports = ['$q', '$http', '$rootScope',
    function($q, $http, $rootScope) {
        return {
            apiRequest: function apiRequest(ApiObj) {
                var deffered = $q.defer();
                $http({
                        method: ApiObj.method || 'GET',
                        url: ApiObj.url || '',
                        params: ApiObj.params || {},
                        data: ApiObj.data || {}
                    })
                    .then(function(data) {
                        // deffered.resolve(data);
                        if (data.status === 200) {
                            deffered.resolve(data);
                        } else {
                            deffered.reject(data);
                        }
                        // console.log('from serv', !data.data.items.length);
                        // if (data.data.items && !data.data.items.length) {
                        //     deffered.reject(data);
                        // }
                    }, function(error) {
                        deffered.reject(error);
                    });
                return deffered.promise;
            }
        };
    }
];

},{}],9:[function(require,module,exports){
module.exports = "<div class=container-fluid ng-init=vm.init()><div class=row><div class=\"col-md-12 navigation-bar\"><div class=row><div class=col-md-4><i class=\"fa fa-youtube\" aria-hidden=true>Youtube Video Player</i></div><div class=col-md-8><form name=addToPlaylistForm class=form-inline ng-submit=vm.addToPlaylist()><div class=form-group><label for=\"url \">Add Youtube Link</label><input type=text name=url ng-model=vm.form.url class=form-control id=url placeholder=\"Paste Link here\" ng-pattern=vm.youtubeUrlRegex minlength=1 ng-class=\"{'error': addToPlaylistForm.url.$dirty && addToPlaylistForm.url.$invalid}\"> <span ng-show=\"addToPlaylistForm.url.$dirty && addToPlaylistForm.url.$invalid\">Please Enter a valid URL</span> <button class=\"btn btn-success\" ng-disabled=\"addToPlaylistForm.url.$dirty && addToPlaylistForm.url.$invalid\">Add</button></div></form></div></div></div><div class=col-md-8 ng-show=!vm.videoSrc.length><h1>No playlist foud!!</h1></div><div class=\"col-md-8 videogular-container\" ng-show=vm.videoSrc.length><videogular vg-theme=vm.config.theme.url vg-player-ready=vm.onPlayerReady($API) vg-complete=vm.onVideoComplete()><vg-media vg-src=vm.config.sources vg-youtube=\"rel=1;showinfo=1\"></vg-media><vg-controls><vg-play-pause-button></vg-play-pause-button><vg-time-display>{{ currentTime | date:'mm:ss':'+0000' }}</vg-time-display><vg-scrub-bar><vg-scrub-bar-current-time></vg-scrub-bar-current-time></vg-scrub-bar><vg-time-display>{{ timeLeft | date:'mm:ss':'+0000' }}</vg-time-display><vg-volume><vg-mute-button></vg-mute-button><vg-volume-bar></vg-volume-bar></vg-volume><vg-fullscreen-button></vg-fullscreen-button></vg-controls><vg-overlay-play></vg-overlay-play></videogular></div><div class=\"col-md-4 content-wrapper\"><div class=row class=content><div class=\"col-md-12 item\" ng-repeat=\"video in vm.videoSrc track by $index\" ng-click=vm.changeVideoSource($index) ng-class=\"{'current-playing': vm.currentVideoSourceIndex===$index}\"><div class=row><div class=col-md-4><img ng-src={{video.thumbnail}} alt=\"\" ng-show=!!video.thumbnail> <i class=\"fa fa-music fa-5x\" aria-hidden=true ng-show=!video.thumbnail></i></div><div class=\"col-md-6 video-detail\"><p><strong>Title:</strong> {{video.title}}</p><p><strong>Duration:</strong> {{video.duration}} sec.</p></div><div class=col-md-2 ng-click=vm.removeVideo($index)><span class=\"fa fa-trash pull-right\"></span></div></div></div></div></div></div></div>";

},{}]},{},[1])