(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

angular.module('RadioApp', [
    'ui.router',
    'ui.bootstrap',
    'ngYoutubeEmbed',
    require('./modules').name
])

},{"./modules":2}],2:[function(require,module,exports){
'use strict';

module.exports = angular.module('RadioApp.modules', [
    require('./public').name
]);

},{"./public":5}],3:[function(require,module,exports){


},{}],4:[function(require,module,exports){
'use strict';

function VideoController($scope, $state, Constant, HTTP, APIS, $rootScope) {
    $rootScope.loading = true;

    var vm = this;
    vm.videos = [];
    vm.defaultThumbnail = "resources/video_icon.png";
    vm.showForm = false;
    vm.youtubeUrlRegex = /^((?:https?:)?\/\/)?((?:www|m)\.)?((?:youtube\.com|youtu.be))(\/(?:[\w\-]+\?v=|embed\/|v\/)?)([\w\-]+)(\S+)?$/;
    vm.form = {
        'link': ''
    };
    var reqObj = {};
    vm.init = function() {
        $rootScope.loading = true;
        reqObj = {
            'url': APIS.list,
        }
        HTTP.apiRequest(reqObj).then(function(res) {
            console.log("succc", res);
            vm.videos = res.data.data;
            vm.videoID = vm.videos[0].id;
            vm.end = vm.videos[0].duration;
            $rootScope.loading = false;
        }, function(err) {
            console.log(err);
            vm.videos = [];
            $rootScope.loading = false;
        });

    };

    vm.changeVideo = function(index) {
        vm.videoID = vm.videos[index].id;
        vm.end = vm.videos[index].duration;
    }
    vm.deletVideo = function(index) {
        $rootScope.loading = true;
        reqObj = {
            'url': APIS.remove + vm.videos[index].id,
            'method': 'POST'
        };
        HTTP.apiRequest(reqObj).then(function(res) {
            console.log('deleted');
            $rootScope.loading = false;
            vm.init();
        }, function(err) {
            console.log(err);
            vm.init();
            $rootScope.loading = false;
        });

    };

    vm.key = 'AIzaSyBoyYcM5pm0rVoCcbEgO9qPqUz1Vqj_jCw';
    vm.getDuration = function(duration) {
        var a = duration.match(/\d+/g);

        if (duration.indexOf('M') >= 0 && duration.indexOf('H') == -1 && duration.indexOf('S') == -1) {
            a = [0, a[0], 0];
        }

        if (duration.indexOf('H') >= 0 && duration.indexOf('M') == -1) {
            a = [a[0], 0, a[1]];
        }
        if (duration.indexOf('H') >= 0 && duration.indexOf('M') == -1 && duration.indexOf('S') == -1) {
            a = [a[0], 0, 0];
        }

        duration = 0;

        if (a.length == 3) {
            duration = duration + parseInt(a[0]) * 3600;
            duration = duration + parseInt(a[1]) * 60;
            duration = duration + parseInt(a[2]);
        }

        if (a.length == 2) {
            duration = duration + parseInt(a[0]) * 60;
            duration = duration + parseInt(a[1]);
        }

        if (a.length == 1) {
            duration = duration + parseInt(a[0]);
        }
        return duration;
    };

    vm.addLink = function() {
        $rootScope.loading = true;

        vm.id = vm.form.link.match(/(?:https?:\/{2})?(?:w{3}\.)?youtu(?:be)?\.(?:com|be)(?:\/watch\?v=|\/)([^\s&]+)/)[1];
        HTTP.apiRequest({ 'url': APIS.fetchVideoInfo + 'id=' + vm.id + '&key=' + vm.key + APIS.videoInfoConfigUrl })
            .then(function(res) {
                    console.log(res);
                    vm.thumbnail = res.data.items[0].snippet.thumbnails.default.url;
                    reqObj = {
                        'url': APIS.add,
                        data: {
                            data: {
                                title: res.data.items[0].snippet.title,
                                id: vm.id,
                                duration: vm.getDuration(res.data.items[0].contentDetails.duration)
                            }
                        },
                        method: 'POST'
                    };

                    HTTP.apiRequest(reqObj)
                        .then(function(res) {
                            $rootScope.loading = false;
                            vm.showForm = !vm.showForm
                            vm.videos.push({
                                title: reqObj.data.data.title,
                                duration: reqObj.data.data.duration,
                                thumbnail: vm.thumbnail,
                                id: vm.id
                            });
                            if (vm.videos.length === 1) {
                                vm.changeVideo(0);
                            }
                        }, function(err) {
                            console.log(res);
                        });
                },
                function(err) {
                    console.log(res);
                });
    }


};

VideoController.$inject = ['$scope', '$state', 'Constant', 'HTTP', 'APIS', '$rootScope'];
module.exports = VideoController;

},{}],5:[function(require,module,exports){
'use strict';

module.exports = angular.module('RadioApp.modules.public', ['ui.router'])
    .config(require('./router/router'))
    .constant('Constant', require('./config/constant'))
    .service('HTTP', require('./services/HTTP'))
    .service('APIS', require('./services/apis'))
    .controller('VideoController', require('./controllers/VideoController'))

},{"./config/constant":3,"./controllers/VideoController":4,"./router/router":6,"./services/HTTP":7,"./services/apis":8}],6:[function(require,module,exports){
'use strict';
module.exports = [
    '$stateProvider',
    '$urlRouterProvider',
    function($stateProvider, $urlRouterProvider) {
        $stateProvider
            .state('home', {
                url: '/home',
                template: require('../templates/video.html'),
                controller: 'VideoController',
                controllerAs: 'vm'
            })
        $urlRouterProvider.otherwise('/home');
    }
];

},{"../templates/video.html":9}],7:[function(require,module,exports){
'use strict';
module.exports = ['$q', '$http', '$rootScope',
    function($q, $http, $rootScope) {
        return {
            apiRequest: function apiRequest(ApiObj) {
                var deffered = $q.defer();
                $http({
                        method: ApiObj.method || 'GET',
                        url: ApiObj.url || '',
                        params: ApiObj.params || {},
                        data: ApiObj.data || {}
                    })
                    .then(function(data) {
                        // deffered.resolve(data);
                        if (data.status === 200) {
                            deffered.resolve(data);
                        } else {
                            deffered.reject(data);
                        }
                    }, function(error) {
                        deffered.reject(error);
                    });
                return deffered.promise;
            }
        };
    }
];

},{}],8:[function(require,module,exports){
'use strict';
module.exports = ['$rootScope',
    function($rootScope) {
        var baseURI = 'http://playlist-royletzchange.rhcloud.com/';
        return {
            'list': baseURI + 'list',
            'add': baseURI + 'add',
            'remove': baseURI + 'remove/',
            'fetchVideoInfo': 'https://www.googleapis.com/youtube/v3/videos?',
            'videoInfoConfigUrl': '&part=snippet,contentDetails,statistics,status'
        };
    }
];

},{}],9:[function(require,module,exports){
module.exports = "<div class=container-fluid ng-init=vm.init()><div class=row><div class=col-md-8 ng-show=!vm.videos.length><h1>No playlist foud!!</h1></div><div class=col-md-8 ng-show=vm.videos.length><ng-youtube-embed video=vm.videoID autoplay=true color=white disablekb=true end=vm.end></ng-youtube-embed></div><div class=\"col-md-4 playlist-wrapper\"><div class=row class=playlist><div class=\"col-md-12 list-item\" ng-repeat=\"video in vm.videos track by $index\" ng-click=vm.changeVideo($index)><div class=row><div class=col-md-4><span>{{$index+1}}</span> <img ng-src=\"{{video.thumbnail || vm.defaultThumbnail}}\" alt=\"\"></div><div class=col-md-6><p><strong>Title:</strong> {{video.title}}</p><p><strong>Duration:</strong> {{video.duration}}</p></div><div class=col-md-2 ng-click=vm.deletVideo($index)><span class=\"fa fa-trash pull-right\"></span></div></div></div></div></div><div class=col-md-12><button class=\"btn btn-primary\" ng-click=\"vm.showForm = !vm.showForm;\" ng-show=!vm.showForm>Add Youtube Link</button><form name=addLink class=form-inline ng-show=vm.showForm><div class=form-group><label for=\"link \">Enter Link</label><input type=text name=link ng-model=vm.form.link class=form-control id=link placeholder=Link ng-pattern=vm.youtubeUrlRegex minlength=1 ng-class=\"{'error': addLink.link.$dirty && addLink.link.$invalid}\"> <span ng-show=\"addLink.link.$dirty && addLink.link.$invalid\">Please Enter valid URL</span> <button class=\"btn btn-success\" ng-click=vm.addLink()>Add</button> <button class=\"btn btn-danger\" ng-click=\"vm.showForm = !vm.showForm;\" ng-show=vm.showForm>Cancel</button></div></form></div></div></div>";

},{}]},{},[1])